; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Black Sheep Texture Mod for UCH"
#define MyAppVersion "1.0"
#define MyAppPublisher "Grim Stride"
#define MyAppURL "https://github.com/GrimStride/"
#define MyAppExeName "BlackSheepTexMod.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{CFB31A33-F5DA-4752-BCCB-B663EC705486}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
CreateAppDir=no
LicenseFile=C:\inno\LICENSE.txt
OutputDir=C:\inno
OutputBaseFilename=BlackSheepTexMod
Compression=lzma
SolidCompression=yes
Uninstallable=no
PrivilegesRequired=lowest
UsePreviousPrivileges=False

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Code]
{procedure BrowseForFolder(var Directory: String);
begin
  Log('yay');
end;}
var
 //Page: TWizardPage;
 Fol: string;
 Edit: TEdit;
 RadioButton, RadioButton2: TNewRadioButton;
 Button, FormButton: TButton;
 Manual: Boolean;

procedure CheckRadio(Sender: TObject);
begin
  if RadioButton.Checked = True then
  begin
    //Edit.ReadOnly := True;
    Edit.Enabled := False;
    Button.Enabled := False;
    //Edit.ParentColor := True;
  end else begin
    //Edit.ReadOnly := False;
    Edit.Enabled := True;
    Button.Enabled := True;
    //Edit.ParentColor := False;
    //Edit.Color := clWhite
  end;
end;
procedure SelectDir(Sender: TObject);
var
  Dir: string;
begin
  //Dir := TEdit;
  //Dir := Page.Values[0];
  if BrowseForFolder(SetupMessage(msgBrowseDialogLabel), Dir, True) then
  begin
    Edit.Text := Dir
  end;
  //Edit.Text := AddBackslash(Dir);
end;
procedure MyCustomPage;
var
 V: string;
 //Dir: string;
 Page: TWizardPage;
 //CheckBox: TCheckBox;
 //Button, FormButton: TButton;
 CheckBox: TNewCheckBox;
 //Edit: TEdit;
 PasswordEdit: TPasswordEdit;
 Memo: TMemo;
 Lbl, ProgressBarLabel: TLabel;
 ComboBox: TNewComboBox;
 ListBox: TListBox;
 StaticText: TNewStaticText;
 ProgressBar: TNewProgressBar;
 CheckListBox, CheckListBox2: TNewCheckListBox;
 FolderTreeView: TFolderTreeView;
 BitmapImage, BitmapImage2, BitmapImage3: TBitmapImage;
 BitmapFileName: String;
 RichEditViewer: TRichEditViewer;
begin
  Page := CreateCustomPage(wpLicense, 'Step 1', 'In order to install the content, game folder must be provided');

  {CheckListBox2 := TNewCheckListBox.Create(Page);
  //CheckListBox2.Top := CheckListBox.Top + CheckListBox.Height + ScaleY(8);
  CheckListBox2.Width := Page.SurfaceWidth;
  CheckListBox2.Height := ScaleY(97);
  CheckListBox2.Anchors := [akLeft, akRight, akBottom];
  CheckListBox2.BorderStyle := bsNone;
  CheckListBox2.ParentColor := True;
  CheckListBox2.MinItemHeight := WizardForm.TasksList.MinItemHeight;
  CheckListBox2.ShowLines := False;
  CheckListBox2.WantTabs := True;
  CheckListBox2.Parent := Page.Surface;
  //CheckListBox2.AddGroup('TNewCheckListBox', '', 0, nil);
  CheckListBox2.AddRadioButton('Detect game folder automatically', '', 0, True, True, nil);
  CheckListBox2.AddRadioButton('Insert game folder manually', '', 0, False, True, nil);
   }
  RadioButton := TNewRadioButton.Create(Page);
  RadioButton.Parent := Page.Surface
  RadioButton.Top := ScaleY(8);
  RadioButton.Width := Page.SurfaceWidth;
  RadioButton.Left := ScaleX(4)
  //RadioButton.Height := ScaleY(97);
  RadioButton.Caption := 'Detect game folder automatically';
  RadioButton.Checked := True;
  RadioButton.OnClick := @CheckRadio;

  RadioButton2 := TNewRadioButton.Create(Page);
  RadioButton2.Parent := Page.Surface
  RadioButton2.Top := Radiobutton.Top + ScaleY(20);
  RadioButton2.Width := Page.SurfaceWidth;
  RadioButton2.Left := ScaleX(4)
  //RadioButton.Height := ScaleY(97);
  RadioButton2.Caption := 'Insert game folder manually';
  RadioButton2.OnClick := @CheckRadio;
  //RadioButton.OnClick := @CheckRadio;


  Edit := TNewEdit.Create(Page);
  Edit.Left := ScaleX(20);
  Edit.Top := ScaleY(50);// + CheckListBox2.Height;// + ScaleY(8);
  Edit.Width := Page.SurfaceWidth div 2 + ScaleX(64);
  //Edit.Anchors := [akLeft, akRight, akBottom];
  Edit.Text := Fol;
  Edit.Parent := Page.Surface;
  Edit.Enabled := False;
  //Edit.ReadOnly := True;
  //Edit.ParentColor := True;
  //Edit.Parent := CheckListBox2;

  Button := TNewButton.Create(Page);
  Button.Caption := 'Browse...';
  Button.Top := Edit.Top - 1
  Button.Left := Edit.Width + ScaleX(24)
  Button.Width := WizardForm.CalculateButtonWidth([Button.Caption]);
  Button.Height := ScaleY(23);
  Button.OnClick := @SelectDir;
  Button.Enabled := False;
  Button.Parent := Page.Surface;
end;
  {//Result := True;
  if not RegKeyExists(HKCU, 'SOFTWARE\Valve\Steam') then
  begin
    // return False to prevent installation to continue
    //Result := False;
    Log('haha xd');
    // and display a message box
    MsgBox('please install ABC first!!', mbError, MB_OK);
  end else begin
   Log('yeah it is installed')
   RegQueryStringValue(HKCU, 'SOFTWARE\Valve\Steam', 'SteamPath', V)
   Log(V)
  end;}
//end;

procedure InitializeWizard();
begin
  MyCustomPage;
end;
